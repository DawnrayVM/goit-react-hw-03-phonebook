{"version":3,"sources":["Components/Phonebook/Phonebook.jsx","Components/Contacts/Contacts.jsx","Components/ContactsFilter/ContactsFilter.jsx","App.js","index.js","Components/Phonebook/Phonebook.module.css"],"names":["Phonebook","state","name","number","handleInputChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onAddContact","reset","this","className","styles","title","onSubmit","container","formItem","type","onChange","pattern","required","phonebookBtn","Component","useStyles","createUseStyles","contactsList","flexDirection","fontFamily","fontSize","width","marginTop","padding","border","borderRadius","boxShadow","deleteBtn","display","borderStyle","fontWeight","color","textDecoration","background","transition","listItem","justifyContent","alignItems","marginBottom","listText","margin","Contacts","contacts","onDeleteContact","classes","contactItem","map","id","onClick","length","filterForm","filterInput","ContactsFilter","filterValue","App","filter","deleteContact","contactId","prevState","contact","handleAddContact","data","newContact","v4","Object","values","includes","alert","handleFilter","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","normalizedFilter","toLowerCase","visibleContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.188991d3.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport styles from './Phonebook.module.css';\r\n\r\nclass Phonebook extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleInputChange = e => {\r\n        this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onAddContact(this.state);\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    };\r\n\r\n    render() {\r\n        const { number, name } = this.state;\r\n        return (\r\n            <>\r\n                <h2 className={styles.title}>{this.props.title}</h2>\r\n                <form onSubmit={this.handleSubmit} className={styles.container}>\r\n                    <label className={styles.formItem}>\r\n                        Name:\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            onChange={this.handleInputChange}\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                        />\r\n                    </label>\r\n                    <label className={styles.formItem}>\r\n                        Number:\r\n                        <input\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n                            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n                            required\r\n                            value={number}\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                    </label>\r\n                    <button type=\"Submit\" className={styles.phonebookBtn}>\r\n                        Add contact\r\n                    </button>\r\n                </form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Phonebook;\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n    contactsList: {\r\n        flexDirection: 'column',\r\n        fontFamily: 'Roboto',\r\n        fontSize: 20,\r\n        width: 370,\r\n        marginTop: 10,\r\n        padding: '10px 10px',\r\n        border: '1px solid rgba(225, 225, 225, 10)',\r\n        borderRadius: 5,\r\n        boxShadow: '3px 3px 5px 0px rgba(225, 225, 225, 10)',\r\n    },\r\n    deleteBtn: {\r\n        display: 'block',\r\n        width: 100,\r\n        borderStyle: 'none',\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        color: 'white',\r\n        textDecoration: 'none',\r\n        padding: '5px 10px',\r\n        borderRadius: 3,\r\n        background: 'rgb(64,199,129)',\r\n        boxShadow: '0 -3px rgb(53,167,110) inset',\r\n        transition: '0.2s',\r\n        '&:hover': { background: 'rgb(53, 167, 110)' },\r\n        '&:active': {\r\n            background: 'rgb(33,147,90)',\r\n            boxShadow: '0 3px rgb(33,147,90) inset',\r\n        },\r\n    },\r\n    listItem: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        marginBottom: 5,\r\n        '&:last-child': { marginBottom: 0 },\r\n    },\r\n    listText: {\r\n        margin: 0,\r\n    },\r\n});\r\n\r\nconst Contacts = ({ contacts, onDeleteContact }) => {\r\n    const classes = useStyles();\r\n    const contactItem = contacts.map(({ name, id, number }) => (\r\n        <li key={id} className={classes.listItem}>\r\n            <p className={classes.listText}>\r\n                {name}\r\n                {': '}\r\n                {number}\r\n            </p>\r\n\r\n            <button\r\n                type=\"button\"\r\n                onClick={() => onDeleteContact(id)}\r\n                className={classes.deleteBtn}\r\n            >\r\n                Delete\r\n            </button>\r\n        </li>\r\n    ));\r\n    return (\r\n        contacts.length > 0 && (\r\n            <ul className={classes.contactsList}>{contactItem}</ul>\r\n        )\r\n    );\r\n};\r\nexport default Contacts;\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n    filterForm: {\r\n        fontFamily: 'Roboto',\r\n        width: 370,\r\n        marginTop: 10,\r\n        padding: '15px 10px',\r\n        border: '1px solid rgba(225, 225, 225, 10)',\r\n        borderRadius: 5,\r\n        boxShadow: '3px 3px 5px 0px rgba(225, 225, 225, 10)',\r\n    },\r\n    filterInput: {\r\n        fontSize: 20,\r\n        width: 360,\r\n    },\r\n});\r\n\r\nconst ContactsFilter = ({ filterValue, onChange, contacts }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        contacts.length > 0 && (\r\n            <form className={classes.filterForm}>\r\n                <label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={filterValue}\r\n                        onChange={onChange}\r\n                        className={classes.filterInput}\r\n                    />\r\n                </label>\r\n            </form>\r\n        )\r\n    );\r\n};\r\n\r\nexport default ContactsFilter;\r\n","import { Component } from 'react';\r\nimport { v4 } from 'uuid';\r\nimport Phonebook from './Components/Phonebook';\r\nimport Contacts from './Components/Contacts';\r\nimport ContactsFilter from './Components/ContactsFilter';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        contacts: [],\r\n        filter: '',\r\n    };\r\n    componentDidMount() {\r\n        if (JSON.parse(localStorage.getItem('contacts'))) {\r\n            this.setState({\r\n                contacts: JSON.parse(localStorage.getItem('contacts')),\r\n            });\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.contacts !== prevState.contacts) {\r\n            localStorage.setItem(\r\n                'contacts',\r\n                JSON.stringify(this.state.contacts),\r\n            );\r\n        }\r\n    }\r\n    deleteContact = contactId => {\r\n        this.setState(prevState => ({\r\n            contacts: prevState.contacts.filter(\r\n                contact => contact.id !== contactId,\r\n            ),\r\n        }));\r\n    };\r\n\r\n    handleAddContact = data => {\r\n        const newContact = {\r\n            id: v4(),\r\n            name: data.name,\r\n            number: data.number,\r\n        };\r\n        this.setState(prevState => {\r\n            return {\r\n                contacts: Object.values(\r\n                    prevState.contacts\r\n                        .map(({ name }) => name)\r\n                        .includes(newContact.name)\r\n                        ? (alert('Contact with such name already exists'),\r\n                          [...prevState.contacts])\r\n                        : [...prevState.contacts, newContact],\r\n                ),\r\n            };\r\n        });\r\n    };\r\n\r\n    handleFilter = e => {\r\n        this.setState({ filter: e.currentTarget.value });\r\n    };\r\n\r\n    render() {\r\n        const { filter, contacts } = this.state;\r\n        const normalizedFilter = filter.toLowerCase();\r\n        const visibleContacts = contacts.filter(({ name }) =>\r\n            name.toLowerCase().includes(normalizedFilter),\r\n        );\r\n\r\n        return (\r\n            <main>\r\n                <Phonebook\r\n                    title=\"Phonebook\"\r\n                    onAddContact={this.handleAddContact}\r\n                />\r\n                <ContactsFilter\r\n                    contacts={contacts}\r\n                    filterValue={filter}\r\n                    onChange={this.handleFilter}\r\n                />\r\n                <Contacts\r\n                    contacts={visibleContacts}\r\n                    onDeleteContact={this.deleteContact}\r\n                />\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__rcPYL\",\"container\":\"Phonebook_container__3J8nj\",\"formItem\":\"Phonebook_formItem__27gbj\",\"phonebookBtn\":\"Phonebook_phonebookBtn__2xDkS\"};"],"sourceRoot":""}